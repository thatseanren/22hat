{"ast":null,"code":"import _defineProperty from \"/Users/rensiyang/Desktop/22hat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/rensiyang/Desktop/22hat/src/component/Profile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment } from \"react\";\nimport MealDetail from \"./mealDetail\";\nimport { Avatar } from \"@material-ui/core\";\nconst style = {\n  profile: {\n    width: \"320px\",\n    height: \"572px\",\n    display: \"inline-block\",\n    backgroundColor: \"#f5f5f5\",\n    float: \"left\"\n  },\n  //mutual style used by height and weight element\n  heightWeight: {\n    width: \"56px\",\n    height: \"56px\",\n    position: \"relative\",\n    borderRadius: \"50%\",\n    backgroundColor: \"rgba( 0 ,0 ,0, 0.5)\",\n    display: \"inline-block\"\n  },\n  weight: {\n    left: \"32px\",\n    top: \"4px\"\n  },\n  height: {\n    left: \"80px\",\n    top: \"4px\"\n  },\n  // styles for number in weight and height element  '57' & '133' in kg and cm\n  numberInCircle: {\n    display: \"inline-block\",\n    width: \"40px\",\n    height: \"24px\",\n    float: \"left\",\n    position: \"relative\",\n    top: \"8px\",\n    left: \"8px\",\n    textAlign: \"center\",\n    fontFamily: \"Roboto\",\n    fontSize: \"20px\",\n    fontWeight: 500,\n    fontStretch: \"normal\",\n    fontStyle: \"normal\",\n    lineHeight: \"normal\",\n    letterSpacing: \"0.25px\",\n    color: \"#ffffff\"\n  },\n  // styles for unit text in weight and height element eg. 'kg' & 'cm'\n  unitInCircle: {\n    display: \"inline-block\",\n    width: \"40px\",\n    height: \"16px\",\n    float: \"left\",\n    position: \"relative\",\n    top: \"8px\",\n    left: \"8px\",\n    textAlign: \"center\",\n    fontFamily: \"Roboto\",\n    fontSize: \"12px\",\n    fontWeight: \"normal\",\n    fontStretch: \"normal\",\n    fontStyle: \"normal\",\n    lineHeight: \"1.33\",\n    letterSpecing: \"0.4px\",\n    color: \"#ffffff\"\n  },\n  photo: {\n    width: \"96px\",\n    height: \"96px\",\n    display: \"inline-block\",\n    borderRadius: \"50%\",\n    // backgroundColor: \"green\",\n    position: \"relative\",\n    top: \"24px\",\n    left: \"56px\"\n  },\n  NameField: {\n    width: \"288px\",\n    height: \"28px\",\n    position: \"relative\",\n    display: \"inline-block\",\n    marginBottom: \"32px\",\n    top: \"32px\",\n    left: \"16px\",\n    textAlign: \"Center\",\n    fontFamily: \"Roboto\",\n    fontSize: \"24px\",\n    color: \"rgba(0,0,0,0.87r)\"\n  },\n  Seperate: {\n    width: \"320px\",\n    height: \"1px\",\n    opacity: \"0.12\",\n    backgroundColor: \"black\",\n    position: \"relative\",\n    top: \"32px\"\n  },\n  consumed: {\n    width: \"144px\",\n    height: \"28px\",\n    position: \"relative\",\n    top: \"56px\",\n    left: \"16px\",\n    fontFamily: \"Roboto\",\n    fontSize: \"24px\",\n    letterSpacing: \"normal\",\n    float: \"left\",\n    fontWeight: \"normal\"\n  },\n  dailyGoal: {\n    width: \"144px\",\n    height: \"28px\",\n    position: \"relative\",\n    left: \"16px\",\n    top: \"56px\",\n    display: \"inline-block\",\n    textAlign: \"right\",\n    fontFamily: \"Roboto\",\n    fontSize: \"24px\",\n    letterSpacing: \"normal\",\n    fontWeight: \"normal\"\n  },\n  // mutual styles used in plain text 'Consumed' and 'Daily Goal'\n  ConsDaily: {\n    fontFamily: \"Roboto\",\n    position: \"absolute\",\n    top: \"373px\",\n    display: \"inline-block\",\n    width: 144,\n    height: 16,\n    fontSize: \"12px\",\n    letterSpacing: \"0.4px\",\n    color: \"rgba(0, 0, 0, 0.6)\",\n    lineHeight: \"1.33\"\n  },\n  //Consumed style\n  textfield1: {\n    left: \"16px\",\n    textAlign: \"left\"\n  },\n  //Daily Goal style\n  textfield2: {\n    left: \"160px\",\n    textAlign: \"right\"\n  },\n  progressBar: {\n    position: \"absolute\",\n    display: \"inline-block\",\n    top: \"405px\",\n    left: \"24px\",\n    width: \"288px\",\n    height: \"4px\",\n    opacity: \"0.24\",\n    backgroundColor: \"#6200ee\"\n  },\n  progressBar_top: {\n    position: \"absolute\",\n    display: \"inline-block\",\n    top: \"405px\",\n    left: \"24px\",\n    height: \"4px\",\n    // opacity:'0.24',\n    backgroundColor: \"#6200ee\"\n  },\n  progressPercentage: {\n    // display:'block',\n    width: \"56px\",\n    height: \"24px\",\n    position: \"absolute\",\n    left: \"288px\",\n    top: \"413px\",\n    textAlign: \"left\",\n    fontFamily: \"Roboto\",\n    lineHeight: \"1.71\",\n    fontSize: \"14px\",\n    fontWeight: \"500\"\n  },\n  breakfast: {\n    position: \"absolute\",\n    top: \"387px\",\n    left: \"16px\"\n  }\n};\nexport default class Profile extends React.Component {\n  getFoodObjectByMealType() {\n    let mealDetail = {\n      breakfast: [],\n      lunch: [],\n      dinner: [],\n      snack: []\n    };\n    this.props.diet.diet.data_points[this.props.diet.date].intake_list.forEach(element => {\n      mealDetail[element.meal_type].push(element);\n    });\n    return mealDetail;\n  }\n\n  getConsumed() {\n    const data = this.getFoodObjectByMealType();\n    let breakfast = 0;\n    let lunch = 0;\n    let dinner = 0;\n    let snacks = 0;\n    data.breakfast.forEach(element => {\n      breakfast += element.nf_calories * element.serving_qty;\n    });\n    data.lunch.forEach(element => {\n      lunch += element.nf_calories * element.serving_qty;\n    });\n    data.dinner.forEach(element => {\n      dinner += element.nf_calories * element.serving_qty;\n    });\n    data.snack.forEach(element => {\n      snacks += element.nf_calories * element.serving_qty;\n    });\n    return parseInt(breakfast + lunch + dinner + snacks, 10);\n  }\n\n  getProgressBarPercentage() {\n    return Math.floor(this.getConsumed() / this.props.diet.diet.daily_goal * 100);\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"classes.profile\",\n      class: \"profile\",\n      style: style.profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"weight\",\n      style: Object.assign({}, style.weight, style.heightWeight),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: style.numberInCircle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, 57), React.createElement(\"div\", {\n      style: style.unitInCircle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"kg\")), React.createElement(Avatar, {\n      alt: \"Sean\",\n      src: \"./static/istockphoto-476085198-612x612.jpg\",\n      style: style.photo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"height\",\n      style: Object.assign({}, style.height, style.heightWeight),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: style.numberInCircle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, 133), React.createElement(\"div\", {\n      style: style.unitInCircle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"cm\")), React.createElement(\"div\", {\n      className: \"NameField\",\n      style: style.NameField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, this.props.diet.diet.first_name, \" \", this.props.diet.diet.last_name), React.createElement(\"div\", {\n      class: \"Seperate\",\n      style: style.Seperate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"{classes.consumed}\",\n      class: \"consumed\",\n      style: style.consumed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, this.getConsumed(), \" cal\"), React.createElement(\"div\", {\n      className: \"{classes.consumed}\",\n      class: \"dailygoal\",\n      style: style.dailyGoal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, this.props.diet.diet.daily_goal, \" cal\"), React.createElement(\"div\", {\n      className: \"{classes.textfield1}\",\n      class: \"consumed_text\",\n      style: _objectSpread({}, style.textfield1, {}, style.ConsDaily),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"consumed\"), React.createElement(\"div\", {\n      className: \"{classes.textfield2}\",\n      class: \"daily_goal_text\",\n      style: _objectSpread({}, style.textfield2, {}, style.ConsDaily),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"daily goal\"), React.createElement(\"div\", {\n      className: \"{classes.progressBar}\",\n      class: \"progressBar_base\",\n      style: style.progressBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"{classes.progressBar}\",\n      class: \"progressBar\",\n      style: _objectSpread({}, style.progressBar_top, {}, {\n        width: this.getProgressBarPercentage() > 100 ? 288 : this.getProgressBarPercentage() * 2.88\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"progressPercentage\",\n      class: \"progressPercent\",\n      style: _objectSpread({}, style.progressPercentage, {}, {\n        left: this.getProgressBarPercentage() < 15 ? this.getProgressBarPercentage() * 2.88 + 20 : this.getProgressBarPercentage() > 100 ? 288 : this.getProgressBarPercentage() * 2.88\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, this.getProgressBarPercentage(), \"%\"), React.createElement(MealDetail, {\n      data: this.getFoodObjectByMealType(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/rensiyang/Desktop/22hat/src/component/Profile.js"],"names":["React","Fragment","MealDetail","Avatar","style","profile","width","height","display","backgroundColor","float","heightWeight","position","borderRadius","weight","left","top","numberInCircle","textAlign","fontFamily","fontSize","fontWeight","fontStretch","fontStyle","lineHeight","letterSpacing","color","unitInCircle","letterSpecing","photo","NameField","marginBottom","Seperate","opacity","consumed","dailyGoal","ConsDaily","textfield1","textfield2","progressBar","progressBar_top","progressPercentage","breakfast","Profile","Component","getFoodObjectByMealType","mealDetail","lunch","dinner","snack","props","diet","data_points","date","intake_list","forEach","element","meal_type","push","getConsumed","data","snacks","nf_calories","serving_qty","parseInt","getProgressBarPercentage","Math","floor","daily_goal","render","Object","assign","first_name","last_name"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport MealDetail from \"./mealDetail\";\nimport { Avatar } from \"@material-ui/core\";\nconst style = {\n  profile: {\n    width: \"320px\",\n    height: \"572px\",\n    display: \"inline-block\",\n    backgroundColor: \"#f5f5f5\",\n    float: \"left\"\n  },\n  //mutual style used by height and weight element\n  heightWeight: {\n    width: \"56px\",\n    height: \"56px\",\n    position: \"relative\",\n    borderRadius: \"50%\",\n    backgroundColor: \"rgba( 0 ,0 ,0, 0.5)\",\n    display: \"inline-block\"\n  },\n  weight: {\n    left: \"32px\",\n    top: \"4px\"\n  },\n  height: {\n    left: \"80px\",\n    top: \"4px\"\n  },\n  // styles for number in weight and height element  '57' & '133' in kg and cm\n  numberInCircle: {\n    display: \"inline-block\",\n    width: \"40px\",\n    height: \"24px\",\n    float: \"left\",\n    position: \"relative\",\n    top: \"8px\",\n    left: \"8px\",\n    textAlign: \"center\",\n    fontFamily: \"Roboto\",\n    fontSize: \"20px\",\n    fontWeight: 500,\n    fontStretch: \"normal\",\n    fontStyle: \"normal\",\n    lineHeight: \"normal\",\n    letterSpacing: \"0.25px\",\n    color: \"#ffffff\"\n  },\n  // styles for unit text in weight and height element eg. 'kg' & 'cm'\n  unitInCircle: {\n    display: \"inline-block\",\n    width: \"40px\",\n    height: \"16px\",\n    float: \"left\",\n    position: \"relative\",\n    top: \"8px\",\n    left: \"8px\",\n    textAlign: \"center\",\n    fontFamily: \"Roboto\",\n    fontSize: \"12px\",\n    fontWeight: \"normal\",\n    fontStretch: \"normal\",\n    fontStyle: \"normal\",\n    lineHeight: \"1.33\",\n    letterSpecing: \"0.4px\",\n    color: \"#ffffff\"\n  },\n  photo: {\n    width: \"96px\",\n    height: \"96px\",\n    display: \"inline-block\",\n    borderRadius: \"50%\",\n    // backgroundColor: \"green\",\n    position: \"relative\",\n    top: \"24px\",\n    left: \"56px\"\n  },\n  NameField: {\n    width: \"288px\",\n    height: \"28px\",\n    position: \"relative\",\n    display: \"inline-block\",\n    marginBottom: \"32px\",\n    top: \"32px\",\n    left: \"16px\",\n    textAlign: \"Center\",\n    fontFamily: \"Roboto\",\n    fontSize: \"24px\",\n    color: \"rgba(0,0,0,0.87r)\"\n  },\n  Seperate: {\n    width: \"320px\",\n    height: \"1px\",\n    opacity: \"0.12\",\n    backgroundColor: \"black\",\n    position: \"relative\",\n    top: \"32px\"\n  },\n  consumed: {\n    width: \"144px\",\n    height: \"28px\",\n    position: \"relative\",\n    top: \"56px\",\n    left: \"16px\",\n    fontFamily: \"Roboto\",\n    fontSize: \"24px\",\n    letterSpacing: \"normal\",\n    float: \"left\",\n    fontWeight: \"normal\"\n  },\n  dailyGoal: {\n    width: \"144px\",\n    height: \"28px\",\n    position: \"relative\",\n    left: \"16px\",\n    top: \"56px\",\n    display: \"inline-block\",\n    textAlign: \"right\",\n    fontFamily: \"Roboto\",\n    fontSize: \"24px\",\n    letterSpacing: \"normal\",\n    fontWeight: \"normal\"\n  },\n  // mutual styles used in plain text 'Consumed' and 'Daily Goal'\n  ConsDaily: {\n    fontFamily: \"Roboto\",\n    position: \"absolute\",\n    top: \"373px\",\n    display: \"inline-block\",\n    width: 144,\n    height: 16,\n    fontSize: \"12px\",\n    letterSpacing: \"0.4px\",\n    color: \"rgba(0, 0, 0, 0.6)\",\n    lineHeight: \"1.33\"\n  },\n  //Consumed style\n  textfield1: {\n    left: \"16px\",\n    textAlign: \"left\"\n  },\n  //Daily Goal style\n  textfield2: {\n    left: \"160px\",\n    textAlign: \"right\"\n  },\n  progressBar: {\n    position: \"absolute\",\n    display: \"inline-block\",\n    top: \"405px\",\n    left: \"24px\",\n    width: \"288px\",\n    height: \"4px\",\n    opacity: \"0.24\",\n    backgroundColor: \"#6200ee\"\n  },\n  progressBar_top: {\n    position: \"absolute\",\n    display: \"inline-block\",\n    top: \"405px\",\n    left: \"24px\",\n    height: \"4px\",\n    // opacity:'0.24',\n    backgroundColor: \"#6200ee\"\n  },\n  progressPercentage: {\n    // display:'block',\n    width: \"56px\",\n    height: \"24px\",\n    position: \"absolute\",\n    left: \"288px\",\n    top: \"413px\",\n    textAlign: \"left\",\n    fontFamily: \"Roboto\",\n    lineHeight: \"1.71\",\n    fontSize: \"14px\",\n    fontWeight: \"500\"\n  },\n  breakfast: {\n    position: \"absolute\",\n    top: \"387px\",\n    left: \"16px\"\n  }\n};\nexport default class Profile extends React.Component {\n  getFoodObjectByMealType() {\n    let mealDetail = { breakfast: [], lunch: [], dinner: [], snack: [] };\n    this.props.diet.diet.data_points[this.props.diet.date].intake_list.forEach(\n      element => {\n        mealDetail[element.meal_type].push(element);\n      }\n    );\n    return mealDetail;\n  }\n  getConsumed() {\n    const data = this.getFoodObjectByMealType();\n    let breakfast = 0;\n    let lunch = 0;\n    let dinner = 0;\n    let snacks = 0;\n    data.breakfast.forEach(element => {\n      breakfast += element.nf_calories * element.serving_qty;\n    });\n    data.lunch.forEach(element => {\n      lunch += element.nf_calories * element.serving_qty;\n    });\n    data.dinner.forEach(element => {\n      dinner += element.nf_calories * element.serving_qty;\n    });\n    data.snack.forEach(element => {\n      snacks += element.nf_calories * element.serving_qty;\n    });\n    return parseInt((breakfast + lunch + dinner + snacks),10);\n  }\n  getProgressBarPercentage() {\n    return Math.floor(\n      (this.getConsumed() / this.props.diet.diet.daily_goal) * 100\n    );\n  }\n  render() {\n    return (\n      <Fragment>\n        <div className=\"classes.profile\" class=\"profile\" style={style.profile}>\n          <div\n\n            class = 'weight'\n            style={Object.assign({}, style.weight, style.heightWeight)}\n          >\n            <div style={style.numberInCircle}>{57}</div>\n            <div style={style.unitInCircle}>{\"kg\"}</div>\n          </div>\n          {/* <div className=\"{classes.photo}\" style={style.photo} /> */}\n          <Avatar\n            alt=\"Sean\"\n            src=\"./static/istockphoto-476085198-612x612.jpg\"\n          \n            style={style.photo}\n          />\n          <div\n\n            class = 'height'\n            style={Object.assign({}, style.height, style.heightWeight)}\n          >\n            <div style={style.numberInCircle}>{133}</div>\n            <div style={style.unitInCircle}>{\"cm\"}</div>\n          </div>\n          <div className=\"NameField\" style={style.NameField}>\n            {this.props.diet.diet.first_name} {this.props.diet.diet.last_name}\n          </div>\n          <div class='Seperate' style={style.Seperate} />\n          <div className=\"{classes.consumed}\"  class = 'consumed' style={style.consumed}>\n            {this.getConsumed()}\n            {\" cal\"}\n          </div>\n          <div className=\"{classes.consumed}\" class = 'dailygoal' style={style.dailyGoal}>\n            {this.props.diet.diet.daily_goal}\n            {\" cal\"}\n          </div>\n          <div\n            className=\"{classes.textfield1}\"\n            class='consumed_text'\n            style={{ ...style.textfield1, ...style.ConsDaily }}\n          >\n            consumed\n          </div>\n          <div\n            className=\"{classes.textfield2}\"\n            class = 'daily_goal_text'\n            style={{ ...style.textfield2, ...style.ConsDaily }}\n          >\n            daily goal\n          </div>\n          <div className=\"{classes.progressBar}\" class = 'progressBar_base' style={style.progressBar} />\n          <div\n            className=\"{classes.progressBar}\"\n            class = 'progressBar'\n            style={{\n              ...style.progressBar_top,\n              ...{\n                width:\n                  this.getProgressBarPercentage() > 100\n                    ? 288\n                    : this.getProgressBarPercentage() * 2.88\n              }\n            }}\n          />\n          <div\n            className=\"progressPercentage\"\n            class = 'progressPercent'\n            style={{\n              ...style.progressPercentage,\n              ...{\n                left:\n                  this.getProgressBarPercentage() < 15\n                    ? this.getProgressBarPercentage() * 2.88 + 20\n                    : this.getProgressBarPercentage() > 100\n                    ? 288\n                    : this.getProgressBarPercentage() * 2.88\n              }\n            }}\n          >\n            {this.getProgressBarPercentage()}\n            {\"%\"}\n          </div>\n          <MealDetail data={this.getFoodObjectByMealType()} />\n          {/* <MealDetail meal_calories={lunch} meal_type={\"Lunch\"} />\n          <MealDetail meal_calories={dinner} meal_type={\"Dinner\"} />\n          <MealDetail meal_calories={snacks} meal_type={\"Snack\"} /> */}\n        </div>\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}