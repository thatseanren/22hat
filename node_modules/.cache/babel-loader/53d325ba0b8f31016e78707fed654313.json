{"ast":null,"code":"import _defineProperty from\"/Users/rensiyang/Desktop/22hat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/rensiyang/Desktop/22hat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/rensiyang/Desktop/22hat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/rensiyang/Desktop/22hat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/rensiyang/Desktop/22hat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/rensiyang/Desktop/22hat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{Fragment}from\"react\";import CardMedia from\"@material-ui/core/CardMedia\";var FoodInfo=/*#__PURE__*/function(_React$Component){_inherits(FoodInfo,_React$Component);function FoodInfo(){_classCallCheck(this,FoodInfo);return _possibleConstructorReturn(this,_getPrototypeOf(FoodInfo).apply(this,arguments));}_createClass(FoodInfo,[{key:\"render\",value:function render(){var style={wrapper:{display:\"inline-block\",width:\"704px\",height:\"72px\",float:\"left\"},foodPicture:{backgroundSize:\"100%\",backgroundRepeat:\"no-repeat\",backgroundPosition:\"center\",borderRadius:4,display:\"inline-block\",width:\"40px\",height:\"40px\",top:\"16px\",left:\"16px\",float:\"left\",marginRight:\"16px\",marginTop:\"16px\",marginLeft:\"16px\"},foodName:{width:\"524px\",height:\"24px\",marginTop:\"14px\",marginRight:\"8px\",fontSize:\"16px\",fontWeight:\"500\",lineHeight:\"1.5\",letterSpacing:\"0.15px\",color:\"rgba(0, 0, 0, 0.87)\"},servingSize:{width:\"524px\",height:\"20px\",marginRight:\"8px\",float:\"left\",fontSize:\"14px\",fontWeight:\"normal\",lineHeight:\"1.43\",letterSpacing:\"0.25px\",color:\"rgba(0, 0, 0, 0.6)\"},energy:{width:\"64px\",height:\"24px\",fontSize:\"16px\",fontWeight:\"500\",textAlign:\"right\",lineHeight:\"1.5\",letterSpacing:\"0.15px\",color:\"rgba(0, 0, 0, 0.87)\"},mealType:{width:\"64px\",height:\"24px\",fontSize:\"14px\",fontWeight:\"normal\",textAlign:\"right\",lineHeight:\"1.43\",letterSpacing:\"0.25px\",color:\"rgba(0, 0, 0, 0.6)\"},//mutual style used by mealType, energy. servingSize, and foodName\nfontStyle:{display:\"inline-block\",fontStretch:\"normal\",fontStyle:\"normal\",fontFamily:\"Roboto\"}};return React.createElement(Fragment,null,this.props.diet.diet.data_points[this.props.diet.date].intake_list.map(function(item){return React.createElement(\"div\",{class:\"foodInfo\",key:item.food_name,style:style.wrapper},React.createElement(CardMedia,{class:\"foodPicture\",style:style.foodPicture,image:item.thumb}),React.createElement(\"span\",{class:\"foodName\",style:_objectSpread({},style.foodName,{},style.fontStyle)},\" \",item.food_name),React.createElement(\"span\",{class:\"servingSize\",style:_objectSpread({},style.servingSize,{},style.fontStyle)},item.serving_qty,\" \",item.serving_unit,\" \",\"(\"+item.serving_weight_grams+\" g)\"),React.createElement(\"span\",{class:\"calories\",style:_objectSpread({},style.energy,{},style.fontStyle)},parseInt(item.nf_calories)+\" cal\"),React.createElement(\"span\",{class:\"meal_type\",style:_objectSpread({},style.mealType,{},style.fontStyle)},item.meal_type),React.createElement(\"div\",{style:{width:\"632px\",height:\"1px\",opacity:\"0.12\",backgroundColor:\"rgba(0, 0, 0, 0.87)\",position:\"relative\",left:72,top:9}},\" \"));}));}}]);return FoodInfo;}(React.Component);export{FoodInfo as default};","map":{"version":3,"sources":["/Users/rensiyang/Desktop/22hat/src/component/foodInfo.js"],"names":["React","Fragment","CardMedia","FoodInfo","style","wrapper","display","width","height","float","foodPicture","backgroundSize","backgroundRepeat","backgroundPosition","borderRadius","top","left","marginRight","marginTop","marginLeft","foodName","fontSize","fontWeight","lineHeight","letterSpacing","color","servingSize","energy","textAlign","mealType","fontStyle","fontStretch","fontFamily","props","diet","data_points","date","intake_list","map","item","food_name","thumb","serving_qty","serving_unit","serving_weight_grams","parseInt","nf_calories","meal_type","opacity","backgroundColor","position","Component"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nexport default class FoodInfo extends React.Component {\n  render() {\n    const style = {\n      wrapper: {\n        display: \"inline-block\",\n        width: \"704px\",\n        height: \"72px\",\n        float: \"left\"\n      },\n\n      foodPicture: {\n        backgroundSize: \"100%\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"center\",\n        borderRadius: 4,\n        display: \"inline-block\",\n        width: \"40px\",\n        height: \"40px\",\n        top: \"16px\",\n        left: \"16px\",\n        float: \"left\",\n        marginRight: \"16px\",\n        marginTop: \"16px\",\n        marginLeft: \"16px\"\n      },\n\n      foodName: {\n        width: \"524px\",\n        height: \"24px\",\n        marginTop: \"14px\",\n        marginRight: \"8px\",\n\n        fontSize: \"16px\",\n        fontWeight: \"500\",\n\n        lineHeight: \"1.5\",\n        letterSpacing: \"0.15px\",\n        color: \"rgba(0, 0, 0, 0.87)\"\n      },\n      servingSize: {\n        width: \"524px\",\n        height: \"20px\",\n\n        marginRight: \"8px\",\n        float: \"left\",\n\n        fontSize: \"14px\",\n        fontWeight: \"normal\",\n\n        lineHeight: \"1.43\",\n        letterSpacing: \"0.25px\",\n        color: \"rgba(0, 0, 0, 0.6)\"\n      },\n      energy: {\n        width: \"64px\",\n        height: \"24px\",\n\n        fontSize: \"16px\",\n        fontWeight: \"500\",\n\n        textAlign: \"right\",\n        lineHeight: \"1.5\",\n        letterSpacing: \"0.15px\",\n        color: \"rgba(0, 0, 0, 0.87)\"\n      },\n      mealType: {\n        width: \"64px\",\n        height: \"24px\",\n\n        fontSize: \"14px\",\n        fontWeight: \"normal\",\n        textAlign: \"right\",\n\n        lineHeight: \"1.43\",\n        letterSpacing: \"0.25px\",\n        color: \"rgba(0, 0, 0, 0.6)\"\n      },\n      //mutual style used by mealType, energy. servingSize, and foodName\n      fontStyle: {\n        display: \"inline-block\",\n        fontStretch: \"normal\",\n        fontStyle: \"normal\",\n        fontFamily: \"Roboto\"\n      }\n    };\n    return (\n      <Fragment>\n        {this.props.diet.diet.data_points[this.props.diet.date].intake_list.map(\n          item => (\n            <div class=\"foodInfo\" key={item.food_name} style={style.wrapper}>\n              <CardMedia\n                class=\"foodPicture\"\n                style={style.foodPicture}\n                image={item.thumb}\n              />\n              <span\n                class=\"foodName\"\n                style={{\n                  ...style.foodName,\n                  ...style.fontStyle\n                }}\n              >\n                {\" \"}\n                {item.food_name}\n              </span>\n              <span\n                class=\"servingSize\"\n                style={{\n                  ...style.servingSize,\n                  ...style.fontStyle\n                }}\n              >\n                {item.serving_qty} {item.serving_unit}{\" \"}\n                {\"(\" + item.serving_weight_grams + \" g)\"}\n              </span>\n              <span\n                class=\"calories\"\n                style={{ ...style.energy, ...style.fontStyle }}\n              >\n                {parseInt(item.nf_calories) + \" cal\"}\n              </span>\n              <span\n                class=\"meal_type\"\n                style={{\n                  ...style.mealType,\n                  ...style.fontStyle\n                }}\n              >\n                {item.meal_type}\n              </span>\n              <div\n                style={{\n                  width: \"632px\",\n                  height: \"1px\",\n                  opacity: \"0.12\",\n                  backgroundColor: \"rgba(0, 0, 0, 0.87)\",\n                  position: \"relative\",\n                  left: 72,\n                  top: 9\n                }}\n              >\n                {\" \"}\n              </div>\n            </div>\n          )\n        )}\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}