{"ast":null,"code":"import _defineProperty from \"/Users/rensiyang/Desktop/22hat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/rensiyang/Desktop/22hat/src/component/foodInfo.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment } from \"react\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nexport default class FoodInfo extends React.Component {\n  render() {\n    const style = {\n      wrapper: {\n        display: \"inline-block\",\n        width: \"704px\",\n        height: \"72px\",\n        float: \"left\"\n      },\n      foodPicture: {\n        backgroundSize: \"100%\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"center\",\n        borderRadius: 4,\n        display: \"inline-block\",\n        width: \"40px\",\n        height: \"40px\",\n        top: \"16px\",\n        left: \"16px\",\n        float: \"left\",\n        marginRight: \"16px\",\n        marginTop: \"16px\",\n        marginLeft: \"16px\"\n      },\n      foodName: {\n        width: \"524px\",\n        height: \"24px\",\n        marginTop: \"14px\",\n        marginRight: \"8px\",\n        fontSize: \"16px\",\n        fontWeight: \"500\",\n        lineHeight: \"1.5\",\n        letterSpacing: \"0.15px\",\n        color: \"rgba(0, 0, 0, 0.87)\"\n      },\n      servingSize: {\n        width: \"524px\",\n        height: \"20px\",\n        marginRight: \"8px\",\n        float: \"left\",\n        fontSize: \"14px\",\n        fontWeight: \"normal\",\n        lineHeight: \"1.43\",\n        letterSpacing: \"0.25px\",\n        color: \"rgba(0, 0, 0, 0.6)\"\n      },\n      energy: {\n        width: \"64px\",\n        height: \"24px\",\n        fontSize: \"16px\",\n        fontWeight: \"500\",\n        textAlign: \"right\",\n        lineHeight: \"1.5\",\n        letterSpacing: \"0.15px\",\n        color: \"rgba(0, 0, 0, 0.87)\"\n      },\n      mealType: {\n        width: \"64px\",\n        height: \"24px\",\n        fontSize: \"14px\",\n        fontWeight: \"normal\",\n        textAlign: \"right\",\n        lineHeight: \"1.43\",\n        letterSpacing: \"0.25px\",\n        color: \"rgba(0, 0, 0, 0.6)\"\n      },\n      //mutual style used by mealType, energy. servingSize, and foodName\n      fontStyle: {\n        display: \"inline-block\",\n        fontStretch: \"normal\",\n        fontStyle: \"normal\",\n        fontFamily: \"Roboto\"\n      }\n    };\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.props.diet.diet.data_points[this.props.diet.date].intake_list.map(item => React.createElement(\"div\", {\n      class: \"foodInfo\",\n      key: item.food_name,\n      style: style.wrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      class: \"foodPicture\",\n      style: style.foodPicture,\n      image: item.thumb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      class: \"foodName\",\n      style: _objectSpread({}, style.foodName, {}, style.fontStyle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \" \", item.food_name), React.createElement(\"span\", {\n      class: \"servingSize\",\n      style: _objectSpread({}, style.servingSize, {}, style.fontStyle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, item.serving_qty, \" \", item.serving_unit, \" \", \"(\" + item.serving_weight_grams + \" g)\"), React.createElement(\"span\", {\n      class: \"calories\",\n      style: _objectSpread({}, style.energy, {}, style.fontStyle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, parseInt(item.nf_calories) + \" cal\"), React.createElement(\"span\", {\n      class: \"meal_type\",\n      style: _objectSpread({}, style.mealType, {}, style.fontStyle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, item.meal_type), React.createElement(\"div\", {\n      style: {\n        width: \"632px\",\n        height: \"1px\",\n        opacity: \"0.12\",\n        backgroundColor: \"rgba(0, 0, 0, 0.87)\",\n        position: \"relative\",\n        left: 72,\n        top: 9\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \" \"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/rensiyang/Desktop/22hat/src/component/foodInfo.js"],"names":["React","Fragment","CardMedia","FoodInfo","Component","render","style","wrapper","display","width","height","float","foodPicture","backgroundSize","backgroundRepeat","backgroundPosition","borderRadius","top","left","marginRight","marginTop","marginLeft","foodName","fontSize","fontWeight","lineHeight","letterSpacing","color","servingSize","energy","textAlign","mealType","fontStyle","fontStretch","fontFamily","props","diet","data_points","date","intake_list","map","item","food_name","thumb","serving_qty","serving_unit","serving_weight_grams","parseInt","nf_calories","meal_type","opacity","backgroundColor","position"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nexport default class FoodInfo extends React.Component {\n  render() {\n    const style = {\n      wrapper: {\n        display: \"inline-block\",\n        width: \"704px\",\n        height: \"72px\",\n        float: \"left\"\n      },\n\n      foodPicture: {\n        backgroundSize: \"100%\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"center\",\n        borderRadius: 4,\n        display: \"inline-block\",\n        width: \"40px\",\n        height: \"40px\",\n        top: \"16px\",\n        left: \"16px\",\n        float: \"left\",\n        marginRight: \"16px\",\n        marginTop: \"16px\",\n        marginLeft: \"16px\"\n      },\n\n      foodName: {\n        width: \"524px\",\n        height: \"24px\",\n        marginTop: \"14px\",\n        marginRight: \"8px\",\n\n        fontSize: \"16px\",\n        fontWeight: \"500\",\n\n        lineHeight: \"1.5\",\n        letterSpacing: \"0.15px\",\n        color: \"rgba(0, 0, 0, 0.87)\"\n      },\n      servingSize: {\n        width: \"524px\",\n        height: \"20px\",\n\n        marginRight: \"8px\",\n        float: \"left\",\n\n        fontSize: \"14px\",\n        fontWeight: \"normal\",\n\n        lineHeight: \"1.43\",\n        letterSpacing: \"0.25px\",\n        color: \"rgba(0, 0, 0, 0.6)\"\n      },\n      energy: {\n        width: \"64px\",\n        height: \"24px\",\n\n        fontSize: \"16px\",\n        fontWeight: \"500\",\n\n        textAlign: \"right\",\n        lineHeight: \"1.5\",\n        letterSpacing: \"0.15px\",\n        color: \"rgba(0, 0, 0, 0.87)\"\n      },\n      mealType: {\n        width: \"64px\",\n        height: \"24px\",\n\n        fontSize: \"14px\",\n        fontWeight: \"normal\",\n        textAlign: \"right\",\n\n        lineHeight: \"1.43\",\n        letterSpacing: \"0.25px\",\n        color: \"rgba(0, 0, 0, 0.6)\"\n      },\n      //mutual style used by mealType, energy. servingSize, and foodName\n      fontStyle: {\n        display: \"inline-block\",\n        fontStretch: \"normal\",\n        fontStyle: \"normal\",\n        fontFamily: \"Roboto\"\n      }\n    };\n    return (\n      <Fragment>\n        {this.props.diet.diet.data_points[this.props.diet.date].intake_list.map(\n          item => (\n            <div class=\"foodInfo\" key={item.food_name} style={style.wrapper}>\n              <CardMedia\n                class=\"foodPicture\"\n                style={style.foodPicture}\n                image={item.thumb}\n              />\n              <span\n                class=\"foodName\"\n                style={{\n                  ...style.foodName,\n                  ...style.fontStyle\n                }}\n              >\n                {\" \"}\n                {item.food_name}\n              </span>\n              <span\n                class=\"servingSize\"\n                style={{\n                  ...style.servingSize,\n                  ...style.fontStyle\n                }}\n              >\n                {item.serving_qty} {item.serving_unit}{\" \"}\n                {\"(\" + item.serving_weight_grams + \" g)\"}\n              </span>\n              <span\n                class=\"calories\"\n                style={{ ...style.energy, ...style.fontStyle }}\n              >\n                {parseInt(item.nf_calories) + \" cal\"}\n              </span>\n              <span\n                class=\"meal_type\"\n                style={{\n                  ...style.mealType,\n                  ...style.fontStyle\n                }}\n              >\n                {item.meal_type}\n              </span>\n              <div\n                style={{\n                  width: \"632px\",\n                  height: \"1px\",\n                  opacity: \"0.12\",\n                  backgroundColor: \"rgba(0, 0, 0, 0.87)\",\n                  position: \"relative\",\n                  left: 72,\n                  top: 9\n                }}\n              >\n                {\" \"}\n              </div>\n            </div>\n          )\n        )}\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}